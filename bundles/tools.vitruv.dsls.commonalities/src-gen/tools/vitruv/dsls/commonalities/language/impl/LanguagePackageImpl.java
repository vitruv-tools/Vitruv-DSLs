/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.commonalities.language.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

import org.eclipse.xtext.xbase.XbasePackage;

import tools.vitruv.dsls.common.elements.ElementsPackage;

import tools.vitruv.dsls.commonalities.language.AttributeMappingOperand;
import tools.vitruv.dsls.commonalities.language.BidirectionalParticipationCondition;
import tools.vitruv.dsls.commonalities.language.CheckedParticipationCondition;
import tools.vitruv.dsls.commonalities.language.Commonality;
import tools.vitruv.dsls.commonalities.language.CommonalityAttribute;
import tools.vitruv.dsls.commonalities.language.CommonalityAttributeMapping;
import tools.vitruv.dsls.commonalities.language.CommonalityAttributeOperand;
import tools.vitruv.dsls.commonalities.language.CommonalityAttributeReference;
import tools.vitruv.dsls.commonalities.language.CommonalityFile;
import tools.vitruv.dsls.commonalities.language.CommonalityReference;
import tools.vitruv.dsls.commonalities.language.CommonalityReferenceMapping;
import tools.vitruv.dsls.commonalities.language.Concept;
import tools.vitruv.dsls.commonalities.language.EnforcedParticipationCondition;
import tools.vitruv.dsls.commonalities.language.LanguageFactory;
import tools.vitruv.dsls.commonalities.language.LanguagePackage;
import tools.vitruv.dsls.commonalities.language.LiteralOperand;
import tools.vitruv.dsls.commonalities.language.Operand;
import tools.vitruv.dsls.commonalities.language.OperatorAttributeMapping;
import tools.vitruv.dsls.commonalities.language.OperatorImport;
import tools.vitruv.dsls.commonalities.language.OperatorReferenceMapping;
import tools.vitruv.dsls.commonalities.language.Participation;
import tools.vitruv.dsls.commonalities.language.ParticipationAttribute;
import tools.vitruv.dsls.commonalities.language.ParticipationAttributeOperand;
import tools.vitruv.dsls.commonalities.language.ParticipationClass;
import tools.vitruv.dsls.commonalities.language.ParticipationClassOperand;
import tools.vitruv.dsls.commonalities.language.ParticipationCondition;
import tools.vitruv.dsls.commonalities.language.ParticipationConditionOperand;
import tools.vitruv.dsls.commonalities.language.ParticipationPart;
import tools.vitruv.dsls.commonalities.language.ParticipationRelation;
import tools.vitruv.dsls.commonalities.language.ReferenceMappingOperand;
import tools.vitruv.dsls.commonalities.language.ReferencedParticipationAttributeOperand;
import tools.vitruv.dsls.commonalities.language.SimpleAttributeMapping;
import tools.vitruv.dsls.commonalities.language.SimpleReferenceMapping;

import tools.vitruv.dsls.commonalities.language.elements.LanguageElementsPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LanguagePackageImpl extends EPackageImpl implements LanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityFileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operatorImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationClassEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationPartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationRelationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationConditionOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityAttributeMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleAttributeMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operatorAttributeMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass attributeMappingOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityAttributeReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityReferenceMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleReferenceMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operatorReferenceMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass referenceMappingOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass referencedParticipationAttributeOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass literalOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationClassOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participationAttributeOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityAttributeOperandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bidirectionalParticipationConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enforcedParticipationConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass checkedParticipationConditionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see tools.vitruv.dsls.commonalities.language.LanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LanguagePackageImpl()
  {
    super(eNS_URI, LanguageFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link LanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LanguagePackage init()
  {
    if (isInited) return (LanguagePackage)EPackage.Registry.INSTANCE.getEPackage(LanguagePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredLanguagePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    LanguagePackageImpl theLanguagePackage = registeredLanguagePackage instanceof LanguagePackageImpl ? (LanguagePackageImpl)registeredLanguagePackage : new LanguagePackageImpl();

    isInited = true;

    // Initialize simple dependencies
    TypesPackage.eINSTANCE.eClass();
    XbasePackage.eINSTANCE.eClass();
    ElementsPackage.eINSTANCE.eClass();
    LanguageElementsPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLanguagePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LanguagePackage.eNS_URI, theLanguagePackage);
    return theLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityFile()
  {
    return commonalityFileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityFile_OperatorImports()
  {
    return (EReference)commonalityFileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityFile_MetamodelImports()
  {
    return (EReference)commonalityFileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityFile_Concept()
  {
    return (EReference)commonalityFileEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityFile_Commonality()
  {
    return (EReference)commonalityFileEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperatorImport()
  {
    return operatorImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperatorImport_ImportedNamespace()
  {
    return (EAttribute)operatorImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConcept()
  {
    return conceptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConcept_Name()
  {
    return (EAttribute)conceptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonality()
  {
    return commonalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonality_Referenced()
  {
    return (EAttribute)commonalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonality_Name()
  {
    return (EAttribute)commonalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonality_Participations()
  {
    return (EReference)commonalityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonality_Attributes()
  {
    return (EReference)commonalityEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonality_References()
  {
    return (EReference)commonalityEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipation()
  {
    return participationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParticipation_DomainName()
  {
    return (EAttribute)participationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParticipation_DomainAlias()
  {
    return (EAttribute)participationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipation_Parts()
  {
    return (EReference)participationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipation_Conditions()
  {
    return (EReference)participationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationClass()
  {
    return participationClassEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationClass_SuperMetaclass()
  {
    return (EReference)participationClassEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParticipationClass_Singleton()
  {
    return (EAttribute)participationClassEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParticipationClass_ClassAlias()
  {
    return (EAttribute)participationClassEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationPart()
  {
    return participationPartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationRelation()
  {
    return participationRelationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationRelation_LeftParts()
  {
    return (EReference)participationRelationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationRelation_Operator()
  {
    return (EReference)participationRelationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationRelation_RightParts()
  {
    return (EReference)participationRelationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationCondition()
  {
    return participationConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationCondition_LeftOperand()
  {
    return (EReference)participationConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationCondition_Operator()
  {
    return (EReference)participationConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationCondition_RightOperands()
  {
    return (EReference)participationConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationConditionOperand()
  {
    return participationConditionOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityAttribute()
  {
    return commonalityAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityAttribute_Name()
  {
    return (EAttribute)commonalityAttributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityAttribute_Mappings()
  {
    return (EReference)commonalityAttributeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityAttributeMapping()
  {
    return commonalityAttributeMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityAttributeMapping_ReadAndWrite()
  {
    return (EAttribute)commonalityAttributeMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityAttributeMapping_Write()
  {
    return (EAttribute)commonalityAttributeMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityAttributeMapping_Read()
  {
    return (EAttribute)commonalityAttributeMappingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleAttributeMapping()
  {
    return simpleAttributeMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleAttributeMapping_Attribute()
  {
    return (EReference)simpleAttributeMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperatorAttributeMapping()
  {
    return operatorAttributeMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperatorAttributeMapping_Operator()
  {
    return (EReference)operatorAttributeMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperatorAttributeMapping_Operands()
  {
    return (EReference)operatorAttributeMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAttributeMappingOperand()
  {
    return attributeMappingOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationAttribute()
  {
    return participationAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationAttribute_ParticipationClass()
  {
    return (EReference)participationAttributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationAttribute_Attribute()
  {
    return (EReference)participationAttributeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityAttributeReference()
  {
    return commonalityAttributeReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityAttributeReference_Commonality()
  {
    return (EReference)commonalityAttributeReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityAttributeReference_Attribute()
  {
    return (EReference)commonalityAttributeReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityReference()
  {
    return commonalityReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityReference_Name()
  {
    return (EAttribute)commonalityReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityReference_ReferenceType()
  {
    return (EReference)commonalityReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityReference_Mappings()
  {
    return (EReference)commonalityReferenceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityReferenceMapping()
  {
    return commonalityReferenceMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityReferenceMapping_ReadAndWrite()
  {
    return (EAttribute)commonalityReferenceMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityReferenceMapping_Write()
  {
    return (EAttribute)commonalityReferenceMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommonalityReferenceMapping_Read()
  {
    return (EAttribute)commonalityReferenceMappingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleReferenceMapping()
  {
    return simpleReferenceMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleReferenceMapping_Reference()
  {
    return (EReference)simpleReferenceMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleReferenceMapping_ReferenceTargets()
  {
    return (EReference)simpleReferenceMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperatorReferenceMapping()
  {
    return operatorReferenceMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperatorReferenceMapping_ParticipationClass()
  {
    return (EReference)operatorReferenceMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperatorReferenceMapping_Operator()
  {
    return (EReference)operatorReferenceMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperatorReferenceMapping_Operands()
  {
    return (EReference)operatorReferenceMappingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReferenceMappingOperand()
  {
    return referenceMappingOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReferencedParticipationAttributeOperand()
  {
    return referencedParticipationAttributeOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getReferencedParticipationAttributeOperand_ParticipationAttribute()
  {
    return (EReference)referencedParticipationAttributeOperandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperand()
  {
    return operandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLiteralOperand()
  {
    return literalOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLiteralOperand_Expression()
  {
    return (EReference)literalOperandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationClassOperand()
  {
    return participationClassOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationClassOperand_ParticipationClass()
  {
    return (EReference)participationClassOperandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipationAttributeOperand()
  {
    return participationAttributeOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParticipationAttributeOperand_ParticipationAttribute()
  {
    return (EReference)participationAttributeOperandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonalityAttributeOperand()
  {
    return commonalityAttributeOperandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonalityAttributeOperand_AttributeReference()
  {
    return (EReference)commonalityAttributeOperandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBidirectionalParticipationCondition()
  {
    return bidirectionalParticipationConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnforcedParticipationCondition()
  {
    return enforcedParticipationConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCheckedParticipationCondition()
  {
    return checkedParticipationConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LanguageFactory getLanguageFactory()
  {
    return (LanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    commonalityFileEClass = createEClass(COMMONALITY_FILE);
    createEReference(commonalityFileEClass, COMMONALITY_FILE__OPERATOR_IMPORTS);
    createEReference(commonalityFileEClass, COMMONALITY_FILE__METAMODEL_IMPORTS);
    createEReference(commonalityFileEClass, COMMONALITY_FILE__CONCEPT);
    createEReference(commonalityFileEClass, COMMONALITY_FILE__COMMONALITY);

    operatorImportEClass = createEClass(OPERATOR_IMPORT);
    createEAttribute(operatorImportEClass, OPERATOR_IMPORT__IMPORTED_NAMESPACE);

    conceptEClass = createEClass(CONCEPT);
    createEAttribute(conceptEClass, CONCEPT__NAME);

    commonalityEClass = createEClass(COMMONALITY);
    createEAttribute(commonalityEClass, COMMONALITY__REFERENCED);
    createEAttribute(commonalityEClass, COMMONALITY__NAME);
    createEReference(commonalityEClass, COMMONALITY__PARTICIPATIONS);
    createEReference(commonalityEClass, COMMONALITY__ATTRIBUTES);
    createEReference(commonalityEClass, COMMONALITY__REFERENCES);

    participationEClass = createEClass(PARTICIPATION);
    createEAttribute(participationEClass, PARTICIPATION__DOMAIN_NAME);
    createEAttribute(participationEClass, PARTICIPATION__DOMAIN_ALIAS);
    createEReference(participationEClass, PARTICIPATION__PARTS);
    createEReference(participationEClass, PARTICIPATION__CONDITIONS);

    participationClassEClass = createEClass(PARTICIPATION_CLASS);
    createEReference(participationClassEClass, PARTICIPATION_CLASS__SUPER_METACLASS);
    createEAttribute(participationClassEClass, PARTICIPATION_CLASS__SINGLETON);
    createEAttribute(participationClassEClass, PARTICIPATION_CLASS__CLASS_ALIAS);

    participationPartEClass = createEClass(PARTICIPATION_PART);

    participationRelationEClass = createEClass(PARTICIPATION_RELATION);
    createEReference(participationRelationEClass, PARTICIPATION_RELATION__LEFT_PARTS);
    createEReference(participationRelationEClass, PARTICIPATION_RELATION__OPERATOR);
    createEReference(participationRelationEClass, PARTICIPATION_RELATION__RIGHT_PARTS);

    participationConditionEClass = createEClass(PARTICIPATION_CONDITION);
    createEReference(participationConditionEClass, PARTICIPATION_CONDITION__LEFT_OPERAND);
    createEReference(participationConditionEClass, PARTICIPATION_CONDITION__OPERATOR);
    createEReference(participationConditionEClass, PARTICIPATION_CONDITION__RIGHT_OPERANDS);

    participationConditionOperandEClass = createEClass(PARTICIPATION_CONDITION_OPERAND);

    commonalityAttributeEClass = createEClass(COMMONALITY_ATTRIBUTE);
    createEAttribute(commonalityAttributeEClass, COMMONALITY_ATTRIBUTE__NAME);
    createEReference(commonalityAttributeEClass, COMMONALITY_ATTRIBUTE__MAPPINGS);

    commonalityAttributeMappingEClass = createEClass(COMMONALITY_ATTRIBUTE_MAPPING);
    createEAttribute(commonalityAttributeMappingEClass, COMMONALITY_ATTRIBUTE_MAPPING__READ_AND_WRITE);
    createEAttribute(commonalityAttributeMappingEClass, COMMONALITY_ATTRIBUTE_MAPPING__WRITE);
    createEAttribute(commonalityAttributeMappingEClass, COMMONALITY_ATTRIBUTE_MAPPING__READ);

    simpleAttributeMappingEClass = createEClass(SIMPLE_ATTRIBUTE_MAPPING);
    createEReference(simpleAttributeMappingEClass, SIMPLE_ATTRIBUTE_MAPPING__ATTRIBUTE);

    operatorAttributeMappingEClass = createEClass(OPERATOR_ATTRIBUTE_MAPPING);
    createEReference(operatorAttributeMappingEClass, OPERATOR_ATTRIBUTE_MAPPING__OPERATOR);
    createEReference(operatorAttributeMappingEClass, OPERATOR_ATTRIBUTE_MAPPING__OPERANDS);

    attributeMappingOperandEClass = createEClass(ATTRIBUTE_MAPPING_OPERAND);

    participationAttributeEClass = createEClass(PARTICIPATION_ATTRIBUTE);
    createEReference(participationAttributeEClass, PARTICIPATION_ATTRIBUTE__PARTICIPATION_CLASS);
    createEReference(participationAttributeEClass, PARTICIPATION_ATTRIBUTE__ATTRIBUTE);

    commonalityAttributeReferenceEClass = createEClass(COMMONALITY_ATTRIBUTE_REFERENCE);
    createEReference(commonalityAttributeReferenceEClass, COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY);
    createEReference(commonalityAttributeReferenceEClass, COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE);

    commonalityReferenceEClass = createEClass(COMMONALITY_REFERENCE);
    createEAttribute(commonalityReferenceEClass, COMMONALITY_REFERENCE__NAME);
    createEReference(commonalityReferenceEClass, COMMONALITY_REFERENCE__REFERENCE_TYPE);
    createEReference(commonalityReferenceEClass, COMMONALITY_REFERENCE__MAPPINGS);

    commonalityReferenceMappingEClass = createEClass(COMMONALITY_REFERENCE_MAPPING);
    createEAttribute(commonalityReferenceMappingEClass, COMMONALITY_REFERENCE_MAPPING__READ_AND_WRITE);
    createEAttribute(commonalityReferenceMappingEClass, COMMONALITY_REFERENCE_MAPPING__WRITE);
    createEAttribute(commonalityReferenceMappingEClass, COMMONALITY_REFERENCE_MAPPING__READ);

    simpleReferenceMappingEClass = createEClass(SIMPLE_REFERENCE_MAPPING);
    createEReference(simpleReferenceMappingEClass, SIMPLE_REFERENCE_MAPPING__REFERENCE);
    createEReference(simpleReferenceMappingEClass, SIMPLE_REFERENCE_MAPPING__REFERENCE_TARGETS);

    operatorReferenceMappingEClass = createEClass(OPERATOR_REFERENCE_MAPPING);
    createEReference(operatorReferenceMappingEClass, OPERATOR_REFERENCE_MAPPING__PARTICIPATION_CLASS);
    createEReference(operatorReferenceMappingEClass, OPERATOR_REFERENCE_MAPPING__OPERATOR);
    createEReference(operatorReferenceMappingEClass, OPERATOR_REFERENCE_MAPPING__OPERANDS);

    referenceMappingOperandEClass = createEClass(REFERENCE_MAPPING_OPERAND);

    referencedParticipationAttributeOperandEClass = createEClass(REFERENCED_PARTICIPATION_ATTRIBUTE_OPERAND);
    createEReference(referencedParticipationAttributeOperandEClass, REFERENCED_PARTICIPATION_ATTRIBUTE_OPERAND__PARTICIPATION_ATTRIBUTE);

    operandEClass = createEClass(OPERAND);

    literalOperandEClass = createEClass(LITERAL_OPERAND);
    createEReference(literalOperandEClass, LITERAL_OPERAND__EXPRESSION);

    participationClassOperandEClass = createEClass(PARTICIPATION_CLASS_OPERAND);
    createEReference(participationClassOperandEClass, PARTICIPATION_CLASS_OPERAND__PARTICIPATION_CLASS);

    participationAttributeOperandEClass = createEClass(PARTICIPATION_ATTRIBUTE_OPERAND);
    createEReference(participationAttributeOperandEClass, PARTICIPATION_ATTRIBUTE_OPERAND__PARTICIPATION_ATTRIBUTE);

    commonalityAttributeOperandEClass = createEClass(COMMONALITY_ATTRIBUTE_OPERAND);
    createEReference(commonalityAttributeOperandEClass, COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE);

    bidirectionalParticipationConditionEClass = createEClass(BIDIRECTIONAL_PARTICIPATION_CONDITION);

    enforcedParticipationConditionEClass = createEClass(ENFORCED_PARTICIPATION_CONDITION);

    checkedParticipationConditionEClass = createEClass(CHECKED_PARTICIPATION_CONDITION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    ElementsPackage theElementsPackage = (ElementsPackage)EPackage.Registry.INSTANCE.getEPackage(ElementsPackage.eNS_URI);
    LanguageElementsPackage theLanguageElementsPackage = (LanguageElementsPackage)EPackage.Registry.INSTANCE.getEPackage(LanguageElementsPackage.eNS_URI);
    TypesPackage theTypesPackage = (TypesPackage)EPackage.Registry.INSTANCE.getEPackage(TypesPackage.eNS_URI);
    XbasePackage theXbasePackage = (XbasePackage)EPackage.Registry.INSTANCE.getEPackage(XbasePackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    conceptEClass.getESuperTypes().add(theLanguageElementsPackage.getDomain());
    commonalityEClass.getESuperTypes().add(theLanguageElementsPackage.getMetaclass());
    participationEClass.getESuperTypes().add(theLanguageElementsPackage.getPackageLike());
    participationClassEClass.getESuperTypes().add(theLanguageElementsPackage.getClassLike());
    participationClassEClass.getESuperTypes().add(this.getParticipationPart());
    participationRelationEClass.getESuperTypes().add(this.getParticipationPart());
    participationConditionOperandEClass.getESuperTypes().add(this.getOperand());
    commonalityAttributeEClass.getESuperTypes().add(theLanguageElementsPackage.getAttribute());
    simpleAttributeMappingEClass.getESuperTypes().add(this.getCommonalityAttributeMapping());
    operatorAttributeMappingEClass.getESuperTypes().add(this.getCommonalityAttributeMapping());
    attributeMappingOperandEClass.getESuperTypes().add(this.getOperand());
    participationAttributeEClass.getESuperTypes().add(theLanguageElementsPackage.getAttribute());
    commonalityReferenceEClass.getESuperTypes().add(theLanguageElementsPackage.getAttribute());
    simpleReferenceMappingEClass.getESuperTypes().add(this.getCommonalityReferenceMapping());
    operatorReferenceMappingEClass.getESuperTypes().add(this.getCommonalityReferenceMapping());
    referenceMappingOperandEClass.getESuperTypes().add(this.getOperand());
    referencedParticipationAttributeOperandEClass.getESuperTypes().add(this.getReferenceMappingOperand());
    literalOperandEClass.getESuperTypes().add(this.getParticipationConditionOperand());
    literalOperandEClass.getESuperTypes().add(this.getAttributeMappingOperand());
    literalOperandEClass.getESuperTypes().add(this.getReferenceMappingOperand());
    participationClassOperandEClass.getESuperTypes().add(this.getParticipationConditionOperand());
    participationClassOperandEClass.getESuperTypes().add(this.getAttributeMappingOperand());
    participationAttributeOperandEClass.getESuperTypes().add(this.getParticipationConditionOperand());
    participationAttributeOperandEClass.getESuperTypes().add(this.getAttributeMappingOperand());
    participationAttributeOperandEClass.getESuperTypes().add(this.getReferenceMappingOperand());
    commonalityAttributeOperandEClass.getESuperTypes().add(this.getAttributeMappingOperand());
    bidirectionalParticipationConditionEClass.getESuperTypes().add(this.getParticipationCondition());
    enforcedParticipationConditionEClass.getESuperTypes().add(this.getParticipationCondition());
    checkedParticipationConditionEClass.getESuperTypes().add(this.getParticipationCondition());

    // Initialize classes and features; add operations and parameters
    initEClass(commonalityFileEClass, CommonalityFile.class, "CommonalityFile", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCommonalityFile_OperatorImports(), this.getOperatorImport(), null, "operatorImports", null, 0, -1, CommonalityFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityFile_MetamodelImports(), theElementsPackage.getMetamodelImport(), null, "metamodelImports", null, 0, -1, CommonalityFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityFile_Concept(), this.getConcept(), null, "concept", null, 0, 1, CommonalityFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityFile_Commonality(), this.getCommonality(), null, "commonality", null, 0, 1, CommonalityFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operatorImportEClass, OperatorImport.class, "OperatorImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperatorImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, OperatorImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptEClass, Concept.class, "Concept", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConcept_Name(), ecorePackage.getEString(), "name", null, 0, 1, Concept.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityEClass, Commonality.class, "Commonality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommonality_Referenced(), ecorePackage.getEBoolean(), "referenced", null, 0, 1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommonality_Name(), ecorePackage.getEString(), "name", null, 0, 1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonality_Participations(), this.getParticipation(), null, "participations", null, 0, -1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonality_Attributes(), this.getCommonalityAttribute(), null, "attributes", null, 0, -1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonality_References(), this.getCommonalityReference(), null, "references", null, 0, -1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationEClass, Participation.class, "Participation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParticipation_DomainName(), ecorePackage.getEString(), "domainName", null, 0, 1, Participation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParticipation_DomainAlias(), ecorePackage.getEString(), "domainAlias", null, 0, 1, Participation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipation_Parts(), this.getParticipationPart(), null, "parts", null, 0, -1, Participation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipation_Conditions(), this.getParticipationCondition(), null, "conditions", null, 0, -1, Participation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationClassEClass, ParticipationClass.class, "ParticipationClass", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParticipationClass_SuperMetaclass(), theLanguageElementsPackage.getMetaclass(), null, "superMetaclass", null, 0, 1, ParticipationClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParticipationClass_Singleton(), ecorePackage.getEBoolean(), "singleton", null, 0, 1, ParticipationClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParticipationClass_ClassAlias(), ecorePackage.getEString(), "classAlias", null, 0, 1, ParticipationClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationPartEClass, ParticipationPart.class, "ParticipationPart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(participationRelationEClass, ParticipationRelation.class, "ParticipationRelation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParticipationRelation_LeftParts(), this.getParticipationPart(), null, "leftParts", null, 0, -1, ParticipationRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipationRelation_Operator(), theTypesPackage.getJvmDeclaredType(), null, "operator", null, 0, 1, ParticipationRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipationRelation_RightParts(), this.getParticipationPart(), null, "rightParts", null, 0, -1, ParticipationRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationConditionEClass, ParticipationCondition.class, "ParticipationCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParticipationCondition_LeftOperand(), this.getParticipationConditionOperand(), null, "leftOperand", null, 0, 1, ParticipationCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipationCondition_Operator(), theTypesPackage.getJvmDeclaredType(), null, "operator", null, 0, 1, ParticipationCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipationCondition_RightOperands(), this.getParticipationConditionOperand(), null, "rightOperands", null, 0, -1, ParticipationCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationConditionOperandEClass, ParticipationConditionOperand.class, "ParticipationConditionOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commonalityAttributeEClass, CommonalityAttribute.class, "CommonalityAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommonalityAttribute_Name(), ecorePackage.getEString(), "name", null, 0, 1, CommonalityAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityAttribute_Mappings(), this.getCommonalityAttributeMapping(), null, "mappings", null, 0, -1, CommonalityAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityAttributeMappingEClass, CommonalityAttributeMapping.class, "CommonalityAttributeMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommonalityAttributeMapping_ReadAndWrite(), ecorePackage.getEBoolean(), "readAndWrite", null, 0, 1, CommonalityAttributeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommonalityAttributeMapping_Write(), ecorePackage.getEBoolean(), "write", null, 0, 1, CommonalityAttributeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommonalityAttributeMapping_Read(), ecorePackage.getEBoolean(), "read", null, 0, 1, CommonalityAttributeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleAttributeMappingEClass, SimpleAttributeMapping.class, "SimpleAttributeMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSimpleAttributeMapping_Attribute(), this.getParticipationAttribute(), null, "attribute", null, 0, 1, SimpleAttributeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operatorAttributeMappingEClass, OperatorAttributeMapping.class, "OperatorAttributeMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperatorAttributeMapping_Operator(), theTypesPackage.getJvmDeclaredType(), null, "operator", null, 0, 1, OperatorAttributeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperatorAttributeMapping_Operands(), this.getAttributeMappingOperand(), null, "operands", null, 0, -1, OperatorAttributeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(attributeMappingOperandEClass, AttributeMappingOperand.class, "AttributeMappingOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(participationAttributeEClass, ParticipationAttribute.class, "ParticipationAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParticipationAttribute_ParticipationClass(), this.getParticipationClass(), null, "participationClass", null, 0, 1, ParticipationAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParticipationAttribute_Attribute(), theLanguageElementsPackage.getAttribute(), null, "attribute", null, 0, 1, ParticipationAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityAttributeReferenceEClass, CommonalityAttributeReference.class, "CommonalityAttributeReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCommonalityAttributeReference_Commonality(), this.getCommonality(), null, "commonality", null, 0, 1, CommonalityAttributeReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityAttributeReference_Attribute(), this.getCommonalityAttribute(), null, "attribute", null, 0, 1, CommonalityAttributeReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityReferenceEClass, CommonalityReference.class, "CommonalityReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommonalityReference_Name(), ecorePackage.getEString(), "name", null, 0, 1, CommonalityReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityReference_ReferenceType(), this.getCommonality(), null, "referenceType", null, 0, 1, CommonalityReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonalityReference_Mappings(), this.getCommonalityReferenceMapping(), null, "mappings", null, 0, -1, CommonalityReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityReferenceMappingEClass, CommonalityReferenceMapping.class, "CommonalityReferenceMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommonalityReferenceMapping_ReadAndWrite(), ecorePackage.getEBoolean(), "readAndWrite", null, 0, 1, CommonalityReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommonalityReferenceMapping_Write(), ecorePackage.getEBoolean(), "write", null, 0, 1, CommonalityReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommonalityReferenceMapping_Read(), ecorePackage.getEBoolean(), "read", null, 0, 1, CommonalityReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleReferenceMappingEClass, SimpleReferenceMapping.class, "SimpleReferenceMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSimpleReferenceMapping_Reference(), this.getParticipationAttribute(), null, "reference", null, 0, 1, SimpleReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleReferenceMapping_ReferenceTargets(), this.getParticipationClass(), null, "referenceTargets", null, 0, -1, SimpleReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operatorReferenceMappingEClass, OperatorReferenceMapping.class, "OperatorReferenceMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperatorReferenceMapping_ParticipationClass(), this.getParticipationClass(), null, "participationClass", null, 0, 1, OperatorReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperatorReferenceMapping_Operator(), theTypesPackage.getJvmDeclaredType(), null, "operator", null, 0, 1, OperatorReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperatorReferenceMapping_Operands(), this.getReferenceMappingOperand(), null, "operands", null, 0, -1, OperatorReferenceMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(referenceMappingOperandEClass, ReferenceMappingOperand.class, "ReferenceMappingOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(referencedParticipationAttributeOperandEClass, ReferencedParticipationAttributeOperand.class, "ReferencedParticipationAttributeOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getReferencedParticipationAttributeOperand_ParticipationAttribute(), this.getParticipationAttribute(), null, "participationAttribute", null, 0, 1, ReferencedParticipationAttributeOperand.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operandEClass, Operand.class, "Operand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(literalOperandEClass, LiteralOperand.class, "LiteralOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLiteralOperand_Expression(), theXbasePackage.getXExpression(), null, "expression", null, 0, 1, LiteralOperand.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationClassOperandEClass, ParticipationClassOperand.class, "ParticipationClassOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParticipationClassOperand_ParticipationClass(), this.getParticipationClass(), null, "participationClass", null, 0, 1, ParticipationClassOperand.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participationAttributeOperandEClass, ParticipationAttributeOperand.class, "ParticipationAttributeOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParticipationAttributeOperand_ParticipationAttribute(), this.getParticipationAttribute(), null, "participationAttribute", null, 0, 1, ParticipationAttributeOperand.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityAttributeOperandEClass, CommonalityAttributeOperand.class, "CommonalityAttributeOperand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCommonalityAttributeOperand_AttributeReference(), this.getCommonalityAttributeReference(), null, "attributeReference", null, 0, 1, CommonalityAttributeOperand.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bidirectionalParticipationConditionEClass, BidirectionalParticipationCondition.class, "BidirectionalParticipationCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(enforcedParticipationConditionEClass, EnforcedParticipationCondition.class, "EnforcedParticipationCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(checkedParticipationConditionEClass, CheckedParticipationCondition.class, "CheckedParticipationCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //LanguagePackageImpl
