/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.commonalities.language.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import tools.vitruv.dsls.commonalities.language.Commonality;
import tools.vitruv.dsls.commonalities.language.CommonalityAttribute;
import tools.vitruv.dsls.commonalities.language.CommonalityAttributeReference;
import tools.vitruv.dsls.commonalities.language.LanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Commonality Attribute Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.CommonalityAttributeReferenceImpl#getCommonality <em>Commonality</em>}</li>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.CommonalityAttributeReferenceImpl#getAttribute <em>Attribute</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommonalityAttributeReferenceImpl extends MinimalEObjectImpl.Container implements CommonalityAttributeReference
{
  /**
   * The cached value of the '{@link #getCommonality() <em>Commonality</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommonality()
   * @generated
   * @ordered
   */
  protected Commonality commonality;

  /**
   * The cached value of the '{@link #getAttribute() <em>Attribute</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttribute()
   * @generated
   * @ordered
   */
  protected CommonalityAttribute attribute;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommonalityAttributeReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LanguagePackage.Literals.COMMONALITY_ATTRIBUTE_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Commonality getCommonality()
  {
    if (commonality != null && commonality.eIsProxy())
    {
      InternalEObject oldCommonality = (InternalEObject)commonality;
      commonality = (Commonality)eResolveProxy(oldCommonality);
      if (commonality != oldCommonality)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY, oldCommonality, commonality));
      }
    }
    return commonality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Commonality basicGetCommonality()
  {
    return commonality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommonality(Commonality newCommonality)
  {
    Commonality oldCommonality = commonality;
    commonality = newCommonality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY, oldCommonality, commonality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommonalityAttribute getAttribute()
  {
    if (attribute != null && attribute.eIsProxy())
    {
      InternalEObject oldAttribute = (InternalEObject)attribute;
      attribute = (CommonalityAttribute)eResolveProxy(oldAttribute);
      if (attribute != oldAttribute)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE, oldAttribute, attribute));
      }
    }
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonalityAttribute basicGetAttribute()
  {
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttribute(CommonalityAttribute newAttribute)
  {
    CommonalityAttribute oldAttribute = attribute;
    attribute = newAttribute;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE, oldAttribute, attribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY:
        if (resolve) return getCommonality();
        return basicGetCommonality();
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE:
        if (resolve) return getAttribute();
        return basicGetAttribute();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY:
        setCommonality((Commonality)newValue);
        return;
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE:
        setAttribute((CommonalityAttribute)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY:
        setCommonality((Commonality)null);
        return;
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE:
        setAttribute((CommonalityAttribute)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__COMMONALITY:
        return commonality != null;
      case LanguagePackage.COMMONALITY_ATTRIBUTE_REFERENCE__ATTRIBUTE:
        return attribute != null;
    }
    return super.eIsSet(featureID);
  }

} //CommonalityAttributeReferenceImpl
