/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.commonalities.language.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import tools.vitruv.dsls.commonalities.language.CommonalityAttributeOperand;
import tools.vitruv.dsls.commonalities.language.CommonalityAttributeReference;
import tools.vitruv.dsls.commonalities.language.LanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Commonality Attribute Operand</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.CommonalityAttributeOperandImpl#getAttributeReference <em>Attribute Reference</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommonalityAttributeOperandImpl extends AttributeMappingOperandImpl implements CommonalityAttributeOperand
{
  /**
   * The cached value of the '{@link #getAttributeReference() <em>Attribute Reference</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeReference()
   * @generated
   * @ordered
   */
  protected CommonalityAttributeReference attributeReference;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommonalityAttributeOperandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LanguagePackage.Literals.COMMONALITY_ATTRIBUTE_OPERAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommonalityAttributeReference getAttributeReference()
  {
    return attributeReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeReference(CommonalityAttributeReference newAttributeReference, NotificationChain msgs)
  {
    CommonalityAttributeReference oldAttributeReference = attributeReference;
    attributeReference = newAttributeReference;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE, oldAttributeReference, newAttributeReference);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeReference(CommonalityAttributeReference newAttributeReference)
  {
    if (newAttributeReference != attributeReference)
    {
      NotificationChain msgs = null;
      if (attributeReference != null)
        msgs = ((InternalEObject)attributeReference).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE, null, msgs);
      if (newAttributeReference != null)
        msgs = ((InternalEObject)newAttributeReference).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE, null, msgs);
      msgs = basicSetAttributeReference(newAttributeReference, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE, newAttributeReference, newAttributeReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE:
        return basicSetAttributeReference(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE:
        return getAttributeReference();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE:
        setAttributeReference((CommonalityAttributeReference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE:
        setAttributeReference((CommonalityAttributeReference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.COMMONALITY_ATTRIBUTE_OPERAND__ATTRIBUTE_REFERENCE:
        return attributeReference != null;
    }
    return super.eIsSet(featureID);
  }

} //CommonalityAttributeOperandImpl
