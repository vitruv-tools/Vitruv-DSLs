/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.commonalities.language;

import org.eclipse.emf.common.util.EList;

import org.eclipse.xtext.common.types.JvmDeclaredType;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Operator Attribute Mapping</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.OperatorAttributeMapping#getOperator <em>Operator</em>}</li>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.OperatorAttributeMapping#getOperands <em>Operands</em>}</li>
 * </ul>
 *
 * @see tools.vitruv.dsls.commonalities.language.LanguagePackage#getOperatorAttributeMapping()
 * @model
 * @generated
 */
public interface OperatorAttributeMapping extends CommonalityAttributeMapping
{
  /**
   * Returns the value of the '<em><b>Operator</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Operator</em>' reference.
   * @see #setOperator(JvmDeclaredType)
   * @see tools.vitruv.dsls.commonalities.language.LanguagePackage#getOperatorAttributeMapping_Operator()
   * @model
   * @generated
   */
  JvmDeclaredType getOperator();

  /**
   * Sets the value of the '{@link tools.vitruv.dsls.commonalities.language.OperatorAttributeMapping#getOperator <em>Operator</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Operator</em>' reference.
   * @see #getOperator()
   * @generated
   */
  void setOperator(JvmDeclaredType value);

  /**
   * Returns the value of the '<em><b>Operands</b></em>' containment reference list.
   * The list contents are of type {@link tools.vitruv.dsls.commonalities.language.AttributeMappingOperand}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Operands</em>' containment reference list.
   * @see tools.vitruv.dsls.commonalities.language.LanguagePackage#getOperatorAttributeMapping_Operands()
   * @model containment="true"
   * @generated
   */
  EList<AttributeMappingOperand> getOperands();

} // OperatorAttributeMapping
