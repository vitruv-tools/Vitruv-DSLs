/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.commonalities.language.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import tools.vitruv.dsls.commonalities.language.LanguagePackage;
import tools.vitruv.dsls.commonalities.language.ParticipationClass;

import tools.vitruv.dsls.commonalities.language.elements.Metaclass;
import tools.vitruv.dsls.commonalities.language.elements.PackageLike;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Participation Class</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.ParticipationClassImpl#getPackageLikeContainer <em>Package Like Container</em>}</li>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.ParticipationClassImpl#getSuperMetaclass <em>Super Metaclass</em>}</li>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.ParticipationClassImpl#isSingleton <em>Singleton</em>}</li>
 *   <li>{@link tools.vitruv.dsls.commonalities.language.impl.ParticipationClassImpl#getClassAlias <em>Class Alias</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParticipationClassImpl extends MinimalEObjectImpl.Container implements ParticipationClass
{
  /**
   * The cached value of the '{@link #getSuperMetaclass() <em>Super Metaclass</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuperMetaclass()
   * @generated
   * @ordered
   */
  protected Metaclass superMetaclass;

  /**
   * The default value of the '{@link #isSingleton() <em>Singleton</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSingleton()
   * @generated
   * @ordered
   */
  protected static final boolean SINGLETON_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSingleton() <em>Singleton</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSingleton()
   * @generated
   * @ordered
   */
  protected boolean singleton = SINGLETON_EDEFAULT;

  /**
   * The default value of the '{@link #getClassAlias() <em>Class Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassAlias()
   * @generated
   * @ordered
   */
  protected static final String CLASS_ALIAS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClassAlias() <em>Class Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassAlias()
   * @generated
   * @ordered
   */
  protected String classAlias = CLASS_ALIAS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParticipationClassImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LanguagePackage.Literals.PARTICIPATION_CLASS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageLike getPackageLikeContainer()
  {
    PackageLike packageLikeContainer = basicGetPackageLikeContainer();
    return packageLikeContainer != null && packageLikeContainer.eIsProxy() ? (PackageLike)eResolveProxy((InternalEObject)packageLikeContainer) : packageLikeContainer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackageLike basicGetPackageLikeContainer()
  {
    // TODO: implement this method to return the 'Package Like Container' reference
    // -> do not perform proxy resolution
    // Ensure that you remove @generated or mark it @generated NOT
    throw new UnsupportedOperationException();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Metaclass getSuperMetaclass()
  {
    if (superMetaclass != null && superMetaclass.eIsProxy())
    {
      InternalEObject oldSuperMetaclass = (InternalEObject)superMetaclass;
      superMetaclass = (Metaclass)eResolveProxy(oldSuperMetaclass);
      if (superMetaclass != oldSuperMetaclass)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LanguagePackage.PARTICIPATION_CLASS__SUPER_METACLASS, oldSuperMetaclass, superMetaclass));
      }
    }
    return superMetaclass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Metaclass basicGetSuperMetaclass()
  {
    return superMetaclass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSuperMetaclass(Metaclass newSuperMetaclass)
  {
    Metaclass oldSuperMetaclass = superMetaclass;
    superMetaclass = newSuperMetaclass;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.PARTICIPATION_CLASS__SUPER_METACLASS, oldSuperMetaclass, superMetaclass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isSingleton()
  {
    return singleton;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSingleton(boolean newSingleton)
  {
    boolean oldSingleton = singleton;
    singleton = newSingleton;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.PARTICIPATION_CLASS__SINGLETON, oldSingleton, singleton));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getClassAlias()
  {
    return classAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClassAlias(String newClassAlias)
  {
    String oldClassAlias = classAlias;
    classAlias = newClassAlias;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.PARTICIPATION_CLASS__CLASS_ALIAS, oldClassAlias, classAlias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    // TODO: implement this method
    // Ensure that you remove @generated or mark it @generated NOT
    throw new UnsupportedOperationException();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LanguagePackage.PARTICIPATION_CLASS__PACKAGE_LIKE_CONTAINER:
        if (resolve) return getPackageLikeContainer();
        return basicGetPackageLikeContainer();
      case LanguagePackage.PARTICIPATION_CLASS__SUPER_METACLASS:
        if (resolve) return getSuperMetaclass();
        return basicGetSuperMetaclass();
      case LanguagePackage.PARTICIPATION_CLASS__SINGLETON:
        return isSingleton();
      case LanguagePackage.PARTICIPATION_CLASS__CLASS_ALIAS:
        return getClassAlias();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LanguagePackage.PARTICIPATION_CLASS__SUPER_METACLASS:
        setSuperMetaclass((Metaclass)newValue);
        return;
      case LanguagePackage.PARTICIPATION_CLASS__SINGLETON:
        setSingleton((Boolean)newValue);
        return;
      case LanguagePackage.PARTICIPATION_CLASS__CLASS_ALIAS:
        setClassAlias((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.PARTICIPATION_CLASS__SUPER_METACLASS:
        setSuperMetaclass((Metaclass)null);
        return;
      case LanguagePackage.PARTICIPATION_CLASS__SINGLETON:
        setSingleton(SINGLETON_EDEFAULT);
        return;
      case LanguagePackage.PARTICIPATION_CLASS__CLASS_ALIAS:
        setClassAlias(CLASS_ALIAS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.PARTICIPATION_CLASS__PACKAGE_LIKE_CONTAINER:
        return basicGetPackageLikeContainer() != null;
      case LanguagePackage.PARTICIPATION_CLASS__SUPER_METACLASS:
        return superMetaclass != null;
      case LanguagePackage.PARTICIPATION_CLASS__SINGLETON:
        return singleton != SINGLETON_EDEFAULT;
      case LanguagePackage.PARTICIPATION_CLASS__CLASS_ALIAS:
        return CLASS_ALIAS_EDEFAULT == null ? classAlias != null : !CLASS_ALIAS_EDEFAULT.equals(classAlias);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (singleton: ");
    result.append(singleton);
    result.append(", classAlias: ");
    result.append(classAlias);
    result.append(')');
    return result.toString();
  }

} //ParticipationClassImpl
