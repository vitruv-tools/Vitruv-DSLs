/**
 * generated by Xtext 2.9.0
 */
package tools.vitruv.dsls.reactions;

import com.google.inject.Binder;
import org.eclipse.xtext.generator.IGenerator2;
import org.eclipse.xtext.linking.ILinkingService;
import org.eclipse.xtext.naming.IQualifiedNameConverter;
import tools.vitruv.dsls.common.elements.CommonLanguageElementsQualifiedNameConverter;
import tools.vitruv.dsls.reactions.api.generator.IReactionsGenerator;
import tools.vitruv.dsls.reactions.builder.FluentReactionsLanguageBuilder;
import tools.vitruv.dsls.reactions.generator.ExternalReactionsGenerator;
import tools.vitruv.dsls.reactions.generator.InternalReactionsGenerator;
import tools.vitruv.dsls.reactions.generator.ReactionsLanguageGenerator;
import tools.vitruv.dsls.reactions.linking.ReactionsLinkingService;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
@SuppressWarnings("all")
public class ReactionsLanguageRuntimeModule extends AbstractReactionsLanguageRuntimeModule {
  @Override
  public Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
    return CommonLanguageElementsQualifiedNameConverter.class;
  }

  @Override
  public Class<? extends ILinkingService> bindILinkingService() {
    return ReactionsLinkingService.class;
  }

  public Class<? extends IGenerator2> bindIGenerator2() {
    return ReactionsLanguageGenerator.class;
  }

  public Class<? extends IReactionsGenerator> bindIReactionsGenerator() {
    return InternalReactionsGenerator.class;
  }

  @Override
  public void configure(final Binder binder) {
    super.configure(binder);
    binder.<IGenerator2>bind(IGenerator2.class).to(this.bindIGenerator2());
    binder.<IReactionsGenerator>bind(IReactionsGenerator.class).to(this.bindIReactionsGenerator());
    binder.requestStaticInjection(ExternalReactionsGenerator.class);
    binder.requestStaticInjection(FluentReactionsLanguageBuilder.class);
  }
}
