/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.reactions.language.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import tools.vitruv.dsls.reactions.language.LanguagePackage;
import tools.vitruv.dsls.reactions.language.RetrieveOneModelElement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Retrieve One Model Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.reactions.language.impl.RetrieveOneModelElementImpl#isOptional <em>Optional</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.language.impl.RetrieveOneModelElementImpl#isAsserted <em>Asserted</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RetrieveOneModelElementImpl extends RetrieveModelElementTypeImpl implements RetrieveOneModelElement
{
  /**
   * The default value of the '{@link #isOptional() <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptional()
   * @generated
   * @ordered
   */
  protected static final boolean OPTIONAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOptional() <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptional()
   * @generated
   * @ordered
   */
  protected boolean optional = OPTIONAL_EDEFAULT;

  /**
   * The default value of the '{@link #isAsserted() <em>Asserted</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAsserted()
   * @generated
   * @ordered
   */
  protected static final boolean ASSERTED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAsserted() <em>Asserted</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAsserted()
   * @generated
   * @ordered
   */
  protected boolean asserted = ASSERTED_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RetrieveOneModelElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LanguagePackage.Literals.RETRIEVE_ONE_MODEL_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isOptional()
  {
    return optional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOptional(boolean newOptional)
  {
    boolean oldOptional = optional;
    optional = newOptional;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__OPTIONAL, oldOptional, optional));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isAsserted()
  {
    return asserted;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAsserted(boolean newAsserted)
  {
    boolean oldAsserted = asserted;
    asserted = newAsserted;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__ASSERTED, oldAsserted, asserted));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__OPTIONAL:
        return isOptional();
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__ASSERTED:
        return isAsserted();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__OPTIONAL:
        setOptional((Boolean)newValue);
        return;
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__ASSERTED:
        setAsserted((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__OPTIONAL:
        setOptional(OPTIONAL_EDEFAULT);
        return;
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__ASSERTED:
        setAsserted(ASSERTED_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__OPTIONAL:
        return optional != OPTIONAL_EDEFAULT;
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT__ASSERTED:
        return asserted != ASSERTED_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (optional: ");
    result.append(optional);
    result.append(", asserted: ");
    result.append(asserted);
    result.append(')');
    return result.toString();
  }

} //RetrieveOneModelElementImpl
