/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.reactions.language.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import tools.vitruv.dsls.reactions.language.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LanguageFactoryImpl extends EFactoryImpl implements LanguageFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LanguageFactory init()
  {
    try
    {
      LanguageFactory theLanguageFactory = (LanguageFactory)EPackage.Registry.INSTANCE.getEFactory(LanguagePackage.eNS_URI);
      if (theLanguageFactory != null)
      {
        return theLanguageFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LanguageFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LanguageFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LanguagePackage.CONCRETE_MODEL_CHANGE: return createConcreteModelChange();
      case LanguagePackage.MODEL_ELEMENT_CHANGE: return createModelElementChange();
      case LanguagePackage.MODEL_ATTRIBUTE_CHANGE: return createModelAttributeChange();
      case LanguagePackage.ARBITRARY_MODEL_CHANGE: return createArbitraryModelChange();
      case LanguagePackage.ELEMENT_EXISTENCE_CHANGE_TYPE: return createElementExistenceChangeType();
      case LanguagePackage.MODEL_ELEMENT_USAGE_CHANGE_TYPE: return createModelElementUsageChangeType();
      case LanguagePackage.ELEMENT_CREATION_CHANGE_TYPE: return createElementCreationChangeType();
      case LanguagePackage.ELEMENT_DELETION_CHANGE_TYPE: return createElementDeletionChangeType();
      case LanguagePackage.ELEMENT_REFERENCE_CHANGE_TYPE: return createElementReferenceChangeType();
      case LanguagePackage.ELEMENT_ROOT_CHANGE_TYPE: return createElementRootChangeType();
      case LanguagePackage.ELEMENT_INSERTION_CHANGE_TYPE: return createElementInsertionChangeType();
      case LanguagePackage.ELEMENT_INSERTION_IN_LIST_CHANGE_TYPE: return createElementInsertionInListChangeType();
      case LanguagePackage.ELEMENT_INSERTION_AS_ROOT_CHANGE_TYPE: return createElementInsertionAsRootChangeType();
      case LanguagePackage.ELEMENT_REMOVAL_CHANGE_TYPE: return createElementRemovalChangeType();
      case LanguagePackage.ELEMENT_REMOVAL_AS_ROOT_CHANGE_TYPE: return createElementRemovalAsRootChangeType();
      case LanguagePackage.ELEMENT_REMOVAL_FROM_LIST_CHANGE_TYPE: return createElementRemovalFromListChangeType();
      case LanguagePackage.ELEMENT_REPLACEMENT_CHANGE_TYPE: return createElementReplacementChangeType();
      case LanguagePackage.ELEMENT_CHANGE_TYPE: return createElementChangeType();
      case LanguagePackage.RETRIEVE_OR_REQUIRE_ABSCENCE_OF_MODEL_ELEMENT: return createRetrieveOrRequireAbscenceOfModelElement();
      case LanguagePackage.REQUIRE_ABSCENCE_OF_MODEL_ELEMENT: return createRequireAbscenceOfModelElement();
      case LanguagePackage.RETRIEVE_MODEL_ELEMENT: return createRetrieveModelElement();
      case LanguagePackage.RETRIEVE_MODEL_ELEMENT_TYPE: return createRetrieveModelElementType();
      case LanguagePackage.MATCH_CHECK_STATEMENT: return createMatchCheckStatement();
      case LanguagePackage.MODEL_ATTRIBUTE_INSERTED_CHANGE: return createModelAttributeInsertedChange();
      case LanguagePackage.MODEL_ATTRIBUTE_REMOVED_CHANGE: return createModelAttributeRemovedChange();
      case LanguagePackage.MODEL_ATTRIBUTE_REPLACED_CHANGE: return createModelAttributeReplacedChange();
      case LanguagePackage.RETRIEVE_ONE_MODEL_ELEMENT: return createRetrieveOneModelElement();
      case LanguagePackage.RETRIEVE_MANY_MODEL_ELEMENTS: return createRetrieveManyModelElements();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConcreteModelChange createConcreteModelChange()
  {
    ConcreteModelChangeImpl concreteModelChange = new ConcreteModelChangeImpl();
    return concreteModelChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelElementChange createModelElementChange()
  {
    ModelElementChangeImpl modelElementChange = new ModelElementChangeImpl();
    return modelElementChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelAttributeChange createModelAttributeChange()
  {
    ModelAttributeChangeImpl modelAttributeChange = new ModelAttributeChangeImpl();
    return modelAttributeChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArbitraryModelChange createArbitraryModelChange()
  {
    ArbitraryModelChangeImpl arbitraryModelChange = new ArbitraryModelChangeImpl();
    return arbitraryModelChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementExistenceChangeType createElementExistenceChangeType()
  {
    ElementExistenceChangeTypeImpl elementExistenceChangeType = new ElementExistenceChangeTypeImpl();
    return elementExistenceChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelElementUsageChangeType createModelElementUsageChangeType()
  {
    ModelElementUsageChangeTypeImpl modelElementUsageChangeType = new ModelElementUsageChangeTypeImpl();
    return modelElementUsageChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementCreationChangeType createElementCreationChangeType()
  {
    ElementCreationChangeTypeImpl elementCreationChangeType = new ElementCreationChangeTypeImpl();
    return elementCreationChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementDeletionChangeType createElementDeletionChangeType()
  {
    ElementDeletionChangeTypeImpl elementDeletionChangeType = new ElementDeletionChangeTypeImpl();
    return elementDeletionChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementReferenceChangeType createElementReferenceChangeType()
  {
    ElementReferenceChangeTypeImpl elementReferenceChangeType = new ElementReferenceChangeTypeImpl();
    return elementReferenceChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementRootChangeType createElementRootChangeType()
  {
    ElementRootChangeTypeImpl elementRootChangeType = new ElementRootChangeTypeImpl();
    return elementRootChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementInsertionChangeType createElementInsertionChangeType()
  {
    ElementInsertionChangeTypeImpl elementInsertionChangeType = new ElementInsertionChangeTypeImpl();
    return elementInsertionChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementInsertionInListChangeType createElementInsertionInListChangeType()
  {
    ElementInsertionInListChangeTypeImpl elementInsertionInListChangeType = new ElementInsertionInListChangeTypeImpl();
    return elementInsertionInListChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementInsertionAsRootChangeType createElementInsertionAsRootChangeType()
  {
    ElementInsertionAsRootChangeTypeImpl elementInsertionAsRootChangeType = new ElementInsertionAsRootChangeTypeImpl();
    return elementInsertionAsRootChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementRemovalChangeType createElementRemovalChangeType()
  {
    ElementRemovalChangeTypeImpl elementRemovalChangeType = new ElementRemovalChangeTypeImpl();
    return elementRemovalChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementRemovalAsRootChangeType createElementRemovalAsRootChangeType()
  {
    ElementRemovalAsRootChangeTypeImpl elementRemovalAsRootChangeType = new ElementRemovalAsRootChangeTypeImpl();
    return elementRemovalAsRootChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementRemovalFromListChangeType createElementRemovalFromListChangeType()
  {
    ElementRemovalFromListChangeTypeImpl elementRemovalFromListChangeType = new ElementRemovalFromListChangeTypeImpl();
    return elementRemovalFromListChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementReplacementChangeType createElementReplacementChangeType()
  {
    ElementReplacementChangeTypeImpl elementReplacementChangeType = new ElementReplacementChangeTypeImpl();
    return elementReplacementChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementChangeType createElementChangeType()
  {
    ElementChangeTypeImpl elementChangeType = new ElementChangeTypeImpl();
    return elementChangeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RetrieveOrRequireAbscenceOfModelElement createRetrieveOrRequireAbscenceOfModelElement()
  {
    RetrieveOrRequireAbscenceOfModelElementImpl retrieveOrRequireAbscenceOfModelElement = new RetrieveOrRequireAbscenceOfModelElementImpl();
    return retrieveOrRequireAbscenceOfModelElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RequireAbscenceOfModelElement createRequireAbscenceOfModelElement()
  {
    RequireAbscenceOfModelElementImpl requireAbscenceOfModelElement = new RequireAbscenceOfModelElementImpl();
    return requireAbscenceOfModelElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RetrieveModelElement createRetrieveModelElement()
  {
    RetrieveModelElementImpl retrieveModelElement = new RetrieveModelElementImpl();
    return retrieveModelElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RetrieveModelElementType createRetrieveModelElementType()
  {
    RetrieveModelElementTypeImpl retrieveModelElementType = new RetrieveModelElementTypeImpl();
    return retrieveModelElementType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MatchCheckStatement createMatchCheckStatement()
  {
    MatchCheckStatementImpl matchCheckStatement = new MatchCheckStatementImpl();
    return matchCheckStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelAttributeInsertedChange createModelAttributeInsertedChange()
  {
    ModelAttributeInsertedChangeImpl modelAttributeInsertedChange = new ModelAttributeInsertedChangeImpl();
    return modelAttributeInsertedChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelAttributeRemovedChange createModelAttributeRemovedChange()
  {
    ModelAttributeRemovedChangeImpl modelAttributeRemovedChange = new ModelAttributeRemovedChangeImpl();
    return modelAttributeRemovedChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelAttributeReplacedChange createModelAttributeReplacedChange()
  {
    ModelAttributeReplacedChangeImpl modelAttributeReplacedChange = new ModelAttributeReplacedChangeImpl();
    return modelAttributeReplacedChange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RetrieveOneModelElement createRetrieveOneModelElement()
  {
    RetrieveOneModelElementImpl retrieveOneModelElement = new RetrieveOneModelElementImpl();
    return retrieveOneModelElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RetrieveManyModelElements createRetrieveManyModelElements()
  {
    RetrieveManyModelElementsImpl retrieveManyModelElements = new RetrieveManyModelElementsImpl();
    return retrieveManyModelElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LanguagePackage getLanguagePackage()
  {
    return (LanguagePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LanguagePackage getPackage()
  {
    return LanguagePackage.eINSTANCE;
  }

} //LanguageFactoryImpl
