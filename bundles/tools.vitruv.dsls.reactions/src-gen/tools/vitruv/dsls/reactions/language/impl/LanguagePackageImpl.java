/**
 * generated by Xtext 2.30.0
 */
package tools.vitruv.dsls.reactions.language.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

import org.eclipse.xtext.xbase.XbasePackage;

import org.eclipse.xtext.xtype.XtypePackage;

import tools.vitruv.dsls.common.elements.ElementsPackage;

import tools.vitruv.dsls.reactions.language.ArbitraryModelChange;
import tools.vitruv.dsls.reactions.language.ConcreteModelChange;
import tools.vitruv.dsls.reactions.language.ElementChangeType;
import tools.vitruv.dsls.reactions.language.ElementCreationChangeType;
import tools.vitruv.dsls.reactions.language.ElementDeletionChangeType;
import tools.vitruv.dsls.reactions.language.ElementExistenceChangeType;
import tools.vitruv.dsls.reactions.language.ElementInsertionAsRootChangeType;
import tools.vitruv.dsls.reactions.language.ElementInsertionChangeType;
import tools.vitruv.dsls.reactions.language.ElementInsertionInListChangeType;
import tools.vitruv.dsls.reactions.language.ElementReferenceChangeType;
import tools.vitruv.dsls.reactions.language.ElementRemovalAsRootChangeType;
import tools.vitruv.dsls.reactions.language.ElementRemovalChangeType;
import tools.vitruv.dsls.reactions.language.ElementRemovalFromListChangeType;
import tools.vitruv.dsls.reactions.language.ElementReplacementChangeType;
import tools.vitruv.dsls.reactions.language.ElementRootChangeType;
import tools.vitruv.dsls.reactions.language.LanguageFactory;
import tools.vitruv.dsls.reactions.language.LanguagePackage;
import tools.vitruv.dsls.reactions.language.MatchCheckStatement;
import tools.vitruv.dsls.reactions.language.ModelAttributeChange;
import tools.vitruv.dsls.reactions.language.ModelAttributeInsertedChange;
import tools.vitruv.dsls.reactions.language.ModelAttributeRemovedChange;
import tools.vitruv.dsls.reactions.language.ModelAttributeReplacedChange;
import tools.vitruv.dsls.reactions.language.ModelElementChange;
import tools.vitruv.dsls.reactions.language.ModelElementUsageChangeType;
import tools.vitruv.dsls.reactions.language.RequireAbscenceOfModelElement;
import tools.vitruv.dsls.reactions.language.RetrieveManyModelElements;
import tools.vitruv.dsls.reactions.language.RetrieveModelElement;
import tools.vitruv.dsls.reactions.language.RetrieveModelElementType;
import tools.vitruv.dsls.reactions.language.RetrieveOneModelElement;
import tools.vitruv.dsls.reactions.language.RetrieveOrRequireAbscenceOfModelElement;

import tools.vitruv.dsls.reactions.language.toplevelelements.TopLevelElementsPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LanguagePackageImpl extends EPackageImpl implements LanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass concreteModelChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelElementChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelAttributeChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arbitraryModelChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementExistenceChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelElementUsageChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementCreationChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementDeletionChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementReferenceChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementRootChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementInsertionChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementInsertionInListChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementInsertionAsRootChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementRemovalChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementRemovalAsRootChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementRemovalFromListChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementReplacementChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementChangeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass retrieveOrRequireAbscenceOfModelElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass requireAbscenceOfModelElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass retrieveModelElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass retrieveModelElementTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass matchCheckStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelAttributeInsertedChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelAttributeRemovedChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelAttributeReplacedChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass retrieveOneModelElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass retrieveManyModelElementsEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see tools.vitruv.dsls.reactions.language.LanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LanguagePackageImpl()
  {
    super(eNS_URI, LanguageFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link LanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LanguagePackage init()
  {
    if (isInited) return (LanguagePackage)EPackage.Registry.INSTANCE.getEPackage(LanguagePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredLanguagePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    LanguagePackageImpl theLanguagePackage = registeredLanguagePackage instanceof LanguagePackageImpl ? (LanguagePackageImpl)registeredLanguagePackage : new LanguagePackageImpl();

    isInited = true;

    // Initialize simple dependencies
    XbasePackage.eINSTANCE.eClass();
    ElementsPackage.eINSTANCE.eClass();
    TopLevelElementsPackage.eINSTANCE.eClass();
    TypesPackage.eINSTANCE.eClass();
    XtypePackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLanguagePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LanguagePackage.eNS_URI, theLanguagePackage);
    return theLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConcreteModelChange()
  {
    return concreteModelChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelElementChange()
  {
    return modelElementChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModelElementChange_ElementType()
  {
    return (EReference)modelElementChangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModelElementChange_ChangeType()
  {
    return (EReference)modelElementChangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelAttributeChange()
  {
    return modelAttributeChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModelAttributeChange_Feature()
  {
    return (EReference)modelAttributeChangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArbitraryModelChange()
  {
    return arbitraryModelChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementExistenceChangeType()
  {
    return elementExistenceChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelElementUsageChangeType()
  {
    return modelElementUsageChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementCreationChangeType()
  {
    return elementCreationChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementDeletionChangeType()
  {
    return elementDeletionChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementReferenceChangeType()
  {
    return elementReferenceChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getElementReferenceChangeType_Feature()
  {
    return (EReference)elementReferenceChangeTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementRootChangeType()
  {
    return elementRootChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementInsertionChangeType()
  {
    return elementInsertionChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementInsertionInListChangeType()
  {
    return elementInsertionInListChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementInsertionAsRootChangeType()
  {
    return elementInsertionAsRootChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementRemovalChangeType()
  {
    return elementRemovalChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementRemovalAsRootChangeType()
  {
    return elementRemovalAsRootChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementRemovalFromListChangeType()
  {
    return elementRemovalFromListChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementReplacementChangeType()
  {
    return elementReplacementChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementChangeType()
  {
    return elementChangeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRetrieveOrRequireAbscenceOfModelElement()
  {
    return retrieveOrRequireAbscenceOfModelElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRetrieveOrRequireAbscenceOfModelElement_ElementType()
  {
    return (EReference)retrieveOrRequireAbscenceOfModelElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRetrieveOrRequireAbscenceOfModelElement_CorrespondenceSource()
  {
    return (EReference)retrieveOrRequireAbscenceOfModelElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRetrieveOrRequireAbscenceOfModelElement_Tag()
  {
    return (EReference)retrieveOrRequireAbscenceOfModelElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRetrieveOrRequireAbscenceOfModelElement_Precondition()
  {
    return (EReference)retrieveOrRequireAbscenceOfModelElementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRequireAbscenceOfModelElement()
  {
    return requireAbscenceOfModelElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRetrieveModelElement()
  {
    return retrieveModelElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRetrieveModelElement_Name()
  {
    return (EAttribute)retrieveModelElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRetrieveModelElement_RetrievalType()
  {
    return (EReference)retrieveModelElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRetrieveModelElementType()
  {
    return retrieveModelElementTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMatchCheckStatement()
  {
    return matchCheckStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMatchCheckStatement_Asserted()
  {
    return (EAttribute)matchCheckStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMatchCheckStatement_Condition()
  {
    return (EReference)matchCheckStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelAttributeInsertedChange()
  {
    return modelAttributeInsertedChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelAttributeRemovedChange()
  {
    return modelAttributeRemovedChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelAttributeReplacedChange()
  {
    return modelAttributeReplacedChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRetrieveOneModelElement()
  {
    return retrieveOneModelElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRetrieveOneModelElement_Optional()
  {
    return (EAttribute)retrieveOneModelElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRetrieveOneModelElement_Asserted()
  {
    return (EAttribute)retrieveOneModelElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRetrieveManyModelElements()
  {
    return retrieveManyModelElementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LanguageFactory getLanguageFactory()
  {
    return (LanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    concreteModelChangeEClass = createEClass(CONCRETE_MODEL_CHANGE);

    modelElementChangeEClass = createEClass(MODEL_ELEMENT_CHANGE);
    createEReference(modelElementChangeEClass, MODEL_ELEMENT_CHANGE__ELEMENT_TYPE);
    createEReference(modelElementChangeEClass, MODEL_ELEMENT_CHANGE__CHANGE_TYPE);

    modelAttributeChangeEClass = createEClass(MODEL_ATTRIBUTE_CHANGE);
    createEReference(modelAttributeChangeEClass, MODEL_ATTRIBUTE_CHANGE__FEATURE);

    arbitraryModelChangeEClass = createEClass(ARBITRARY_MODEL_CHANGE);

    elementExistenceChangeTypeEClass = createEClass(ELEMENT_EXISTENCE_CHANGE_TYPE);

    modelElementUsageChangeTypeEClass = createEClass(MODEL_ELEMENT_USAGE_CHANGE_TYPE);

    elementCreationChangeTypeEClass = createEClass(ELEMENT_CREATION_CHANGE_TYPE);

    elementDeletionChangeTypeEClass = createEClass(ELEMENT_DELETION_CHANGE_TYPE);

    elementReferenceChangeTypeEClass = createEClass(ELEMENT_REFERENCE_CHANGE_TYPE);
    createEReference(elementReferenceChangeTypeEClass, ELEMENT_REFERENCE_CHANGE_TYPE__FEATURE);

    elementRootChangeTypeEClass = createEClass(ELEMENT_ROOT_CHANGE_TYPE);

    elementInsertionChangeTypeEClass = createEClass(ELEMENT_INSERTION_CHANGE_TYPE);

    elementInsertionInListChangeTypeEClass = createEClass(ELEMENT_INSERTION_IN_LIST_CHANGE_TYPE);

    elementInsertionAsRootChangeTypeEClass = createEClass(ELEMENT_INSERTION_AS_ROOT_CHANGE_TYPE);

    elementRemovalChangeTypeEClass = createEClass(ELEMENT_REMOVAL_CHANGE_TYPE);

    elementRemovalAsRootChangeTypeEClass = createEClass(ELEMENT_REMOVAL_AS_ROOT_CHANGE_TYPE);

    elementRemovalFromListChangeTypeEClass = createEClass(ELEMENT_REMOVAL_FROM_LIST_CHANGE_TYPE);

    elementReplacementChangeTypeEClass = createEClass(ELEMENT_REPLACEMENT_CHANGE_TYPE);

    elementChangeTypeEClass = createEClass(ELEMENT_CHANGE_TYPE);

    retrieveOrRequireAbscenceOfModelElementEClass = createEClass(RETRIEVE_OR_REQUIRE_ABSCENCE_OF_MODEL_ELEMENT);
    createEReference(retrieveOrRequireAbscenceOfModelElementEClass, RETRIEVE_OR_REQUIRE_ABSCENCE_OF_MODEL_ELEMENT__ELEMENT_TYPE);
    createEReference(retrieveOrRequireAbscenceOfModelElementEClass, RETRIEVE_OR_REQUIRE_ABSCENCE_OF_MODEL_ELEMENT__CORRESPONDENCE_SOURCE);
    createEReference(retrieveOrRequireAbscenceOfModelElementEClass, RETRIEVE_OR_REQUIRE_ABSCENCE_OF_MODEL_ELEMENT__TAG);
    createEReference(retrieveOrRequireAbscenceOfModelElementEClass, RETRIEVE_OR_REQUIRE_ABSCENCE_OF_MODEL_ELEMENT__PRECONDITION);

    requireAbscenceOfModelElementEClass = createEClass(REQUIRE_ABSCENCE_OF_MODEL_ELEMENT);

    retrieveModelElementEClass = createEClass(RETRIEVE_MODEL_ELEMENT);
    createEAttribute(retrieveModelElementEClass, RETRIEVE_MODEL_ELEMENT__NAME);
    createEReference(retrieveModelElementEClass, RETRIEVE_MODEL_ELEMENT__RETRIEVAL_TYPE);

    retrieveModelElementTypeEClass = createEClass(RETRIEVE_MODEL_ELEMENT_TYPE);

    matchCheckStatementEClass = createEClass(MATCH_CHECK_STATEMENT);
    createEAttribute(matchCheckStatementEClass, MATCH_CHECK_STATEMENT__ASSERTED);
    createEReference(matchCheckStatementEClass, MATCH_CHECK_STATEMENT__CONDITION);

    modelAttributeInsertedChangeEClass = createEClass(MODEL_ATTRIBUTE_INSERTED_CHANGE);

    modelAttributeRemovedChangeEClass = createEClass(MODEL_ATTRIBUTE_REMOVED_CHANGE);

    modelAttributeReplacedChangeEClass = createEClass(MODEL_ATTRIBUTE_REPLACED_CHANGE);

    retrieveOneModelElementEClass = createEClass(RETRIEVE_ONE_MODEL_ELEMENT);
    createEAttribute(retrieveOneModelElementEClass, RETRIEVE_ONE_MODEL_ELEMENT__OPTIONAL);
    createEAttribute(retrieveOneModelElementEClass, RETRIEVE_ONE_MODEL_ELEMENT__ASSERTED);

    retrieveManyModelElementsEClass = createEClass(RETRIEVE_MANY_MODEL_ELEMENTS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    TopLevelElementsPackage theTopLevelElementsPackage = (TopLevelElementsPackage)EPackage.Registry.INSTANCE.getEPackage(TopLevelElementsPackage.eNS_URI);
    ElementsPackage theElementsPackage = (ElementsPackage)EPackage.Registry.INSTANCE.getEPackage(ElementsPackage.eNS_URI);
    XbasePackage theXbasePackage = (XbasePackage)EPackage.Registry.INSTANCE.getEPackage(XbasePackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    concreteModelChangeEClass.getESuperTypes().add(theTopLevelElementsPackage.getTrigger());
    modelElementChangeEClass.getESuperTypes().add(this.getConcreteModelChange());
    modelAttributeChangeEClass.getESuperTypes().add(this.getConcreteModelChange());
    arbitraryModelChangeEClass.getESuperTypes().add(theTopLevelElementsPackage.getTrigger());
    elementExistenceChangeTypeEClass.getESuperTypes().add(this.getElementChangeType());
    modelElementUsageChangeTypeEClass.getESuperTypes().add(this.getElementChangeType());
    elementCreationChangeTypeEClass.getESuperTypes().add(this.getElementExistenceChangeType());
    elementDeletionChangeTypeEClass.getESuperTypes().add(this.getElementExistenceChangeType());
    elementInsertionChangeTypeEClass.getESuperTypes().add(this.getModelElementUsageChangeType());
    elementInsertionInListChangeTypeEClass.getESuperTypes().add(this.getElementInsertionChangeType());
    elementInsertionInListChangeTypeEClass.getESuperTypes().add(this.getElementReferenceChangeType());
    elementInsertionAsRootChangeTypeEClass.getESuperTypes().add(this.getElementRootChangeType());
    elementInsertionAsRootChangeTypeEClass.getESuperTypes().add(this.getElementInsertionChangeType());
    elementRemovalChangeTypeEClass.getESuperTypes().add(this.getModelElementUsageChangeType());
    elementRemovalAsRootChangeTypeEClass.getESuperTypes().add(this.getElementRootChangeType());
    elementRemovalAsRootChangeTypeEClass.getESuperTypes().add(this.getElementRemovalChangeType());
    elementRemovalFromListChangeTypeEClass.getESuperTypes().add(this.getElementRemovalChangeType());
    elementRemovalFromListChangeTypeEClass.getESuperTypes().add(this.getElementReferenceChangeType());
    elementReplacementChangeTypeEClass.getESuperTypes().add(this.getModelElementUsageChangeType());
    elementReplacementChangeTypeEClass.getESuperTypes().add(this.getElementReferenceChangeType());
    retrieveOrRequireAbscenceOfModelElementEClass.getESuperTypes().add(theTopLevelElementsPackage.getMatchStatement());
    requireAbscenceOfModelElementEClass.getESuperTypes().add(this.getRetrieveOrRequireAbscenceOfModelElement());
    retrieveModelElementEClass.getESuperTypes().add(this.getRetrieveOrRequireAbscenceOfModelElement());
    matchCheckStatementEClass.getESuperTypes().add(theTopLevelElementsPackage.getMatchStatement());
    modelAttributeInsertedChangeEClass.getESuperTypes().add(this.getModelAttributeChange());
    modelAttributeRemovedChangeEClass.getESuperTypes().add(this.getModelAttributeChange());
    modelAttributeReplacedChangeEClass.getESuperTypes().add(this.getModelAttributeChange());
    retrieveOneModelElementEClass.getESuperTypes().add(this.getRetrieveModelElementType());
    retrieveManyModelElementsEClass.getESuperTypes().add(this.getRetrieveModelElementType());

    // Initialize classes and features; add operations and parameters
    initEClass(concreteModelChangeEClass, ConcreteModelChange.class, "ConcreteModelChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(modelElementChangeEClass, ModelElementChange.class, "ModelElementChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModelElementChange_ElementType(), theElementsPackage.getMetaclassReference(), null, "elementType", null, 0, 1, ModelElementChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModelElementChange_ChangeType(), this.getElementChangeType(), null, "changeType", null, 0, 1, ModelElementChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelAttributeChangeEClass, ModelAttributeChange.class, "ModelAttributeChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModelAttributeChange_Feature(), theElementsPackage.getMetaclassEAttributeReference(), null, "feature", null, 0, 1, ModelAttributeChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arbitraryModelChangeEClass, ArbitraryModelChange.class, "ArbitraryModelChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementExistenceChangeTypeEClass, ElementExistenceChangeType.class, "ElementExistenceChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(modelElementUsageChangeTypeEClass, ModelElementUsageChangeType.class, "ModelElementUsageChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementCreationChangeTypeEClass, ElementCreationChangeType.class, "ElementCreationChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementDeletionChangeTypeEClass, ElementDeletionChangeType.class, "ElementDeletionChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementReferenceChangeTypeEClass, ElementReferenceChangeType.class, "ElementReferenceChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getElementReferenceChangeType_Feature(), theElementsPackage.getMetaclassEReferenceReference(), null, "feature", null, 0, 1, ElementReferenceChangeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementRootChangeTypeEClass, ElementRootChangeType.class, "ElementRootChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementInsertionChangeTypeEClass, ElementInsertionChangeType.class, "ElementInsertionChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementInsertionInListChangeTypeEClass, ElementInsertionInListChangeType.class, "ElementInsertionInListChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementInsertionAsRootChangeTypeEClass, ElementInsertionAsRootChangeType.class, "ElementInsertionAsRootChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementRemovalChangeTypeEClass, ElementRemovalChangeType.class, "ElementRemovalChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementRemovalAsRootChangeTypeEClass, ElementRemovalAsRootChangeType.class, "ElementRemovalAsRootChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementRemovalFromListChangeTypeEClass, ElementRemovalFromListChangeType.class, "ElementRemovalFromListChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementReplacementChangeTypeEClass, ElementReplacementChangeType.class, "ElementReplacementChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementChangeTypeEClass, ElementChangeType.class, "ElementChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(retrieveOrRequireAbscenceOfModelElementEClass, RetrieveOrRequireAbscenceOfModelElement.class, "RetrieveOrRequireAbscenceOfModelElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRetrieveOrRequireAbscenceOfModelElement_ElementType(), theElementsPackage.getMetaclassReference(), null, "elementType", null, 0, 1, RetrieveOrRequireAbscenceOfModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRetrieveOrRequireAbscenceOfModelElement_CorrespondenceSource(), theXbasePackage.getXExpression(), null, "correspondenceSource", null, 0, 1, RetrieveOrRequireAbscenceOfModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRetrieveOrRequireAbscenceOfModelElement_Tag(), theXbasePackage.getXExpression(), null, "tag", null, 0, 1, RetrieveOrRequireAbscenceOfModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRetrieveOrRequireAbscenceOfModelElement_Precondition(), theXbasePackage.getXExpression(), null, "precondition", null, 0, 1, RetrieveOrRequireAbscenceOfModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(requireAbscenceOfModelElementEClass, RequireAbscenceOfModelElement.class, "RequireAbscenceOfModelElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(retrieveModelElementEClass, RetrieveModelElement.class, "RetrieveModelElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRetrieveModelElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, RetrieveModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRetrieveModelElement_RetrievalType(), this.getRetrieveModelElementType(), null, "retrievalType", null, 0, 1, RetrieveModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(retrieveModelElementTypeEClass, RetrieveModelElementType.class, "RetrieveModelElementType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(matchCheckStatementEClass, MatchCheckStatement.class, "MatchCheckStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMatchCheckStatement_Asserted(), ecorePackage.getEBoolean(), "asserted", null, 0, 1, MatchCheckStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMatchCheckStatement_Condition(), theXbasePackage.getXExpression(), null, "condition", null, 0, 1, MatchCheckStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelAttributeInsertedChangeEClass, ModelAttributeInsertedChange.class, "ModelAttributeInsertedChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(modelAttributeRemovedChangeEClass, ModelAttributeRemovedChange.class, "ModelAttributeRemovedChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(modelAttributeReplacedChangeEClass, ModelAttributeReplacedChange.class, "ModelAttributeReplacedChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(retrieveOneModelElementEClass, RetrieveOneModelElement.class, "RetrieveOneModelElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRetrieveOneModelElement_Optional(), ecorePackage.getEBoolean(), "optional", null, 0, 1, RetrieveOneModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRetrieveOneModelElement_Asserted(), ecorePackage.getEBoolean(), "asserted", null, 0, 1, RetrieveOneModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(retrieveManyModelElementsEClass, RetrieveManyModelElements.class, "RetrieveManyModelElements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //LanguagePackageImpl
